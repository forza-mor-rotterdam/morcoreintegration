<Module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="../FrankConfig.xsd">
    <Adapter name="Frank_ListTaakTypes">
        <Receiver name="Frank_ListTaakTypes">
            <ApiListener
                name="Frank_ListTaakTypes"
                uriPattern="/api/v1/taaktype" />
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="Exit" state="SUCCESS" />
                <Exit name="Reject" state="REJECTED" />
                <Exit name="Exception" state="ERROR" />
            </Exits>

            <FixedResultPipe name="InputTaaktypesLijst" filename="responses/ZaakTypes.xml" getInputFromSessionKey="originalMessage"/>

            <ReplacerPipe name="InsertHostName" find="[hostname]" replace="${Frank.API.root-url}"/>

            <XmlValidatorPipe name="ValidateInputMessage" schema="xsd/ValidateGetTaakTypes.xsd"
                root="root">
                <Forward name="success" path="XmlToJson" />
                <Forward name="exception" path="StoreStackTrace" />
                <Forward name="failure" path="Reject" />
            </XmlValidatorPipe>

            <JsonPipe name="XmlToJson" direction="XML2JSON" prettyPrint="true">
                <Forward name="success" path="Exit" />
                <Forward name="failure" path="Exception" />
            </JsonPipe>

            <PutInSessionPipe name="StoreStackTrace" sessionKey="errorStackTrace"/>
            
            <XsltPipe name="ReturnErrorMessage" xpathExpression="concat('Something went wrong. Stack trace: ', $errorStackTrace)">
                <Param name="errorStackTrace" sessionKey="errorStackTrace"/>
                <Forward name="success" path="Exception" />
            </XsltPipe>
        </Pipeline>
    </Adapter>

    <Adapter name="Frank_GetTaakType">
        <Receiver name="Frank_GetTaakType">
            <ApiListener
                name="Frank_GetTaakType"
                uriPattern="/api/v1/taaktype/{uuid}" />
        </Receiver>
        
        <Receiver>
            <JavaListener name="Internal_GetTaakType" />
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="Exit" state="SUCCESS" />
                <Exit name="Reject" state="REJECTED" />
                <Exit name="Exception" state="ERROR" />
                <Exit name="NotFound" state="SUCCESS" code="404"/>
            </Exits>

            <FixedResultPipe name="InputTaaktypesLijst" filename="responses/ZaakTypes.xml" getInputFromSessionKey="originalMessage"/>

            <ReplacerPipe name="InsertHostName" find="[hostname]" replace="${Frank.API.root-url}"/>

            <XmlValidatorPipe name="ValidateInputMessage" schema="xsd/ValidateGetTaakTypes.xsd"
                root="root">
                <Forward name="success" path="GetTaakType" />
                <Forward name="failure" path="Reject" />
            </XmlValidatorPipe>

            <XsltPipe name="GetTaakType" styleSheetName="xsl/TaakApplicatieApi/GetTaakType.xsl">
                <Param name="uuid" sessionKey="uuid" />
            </XsltPipe>

            <XmlIfPipe name="CheckLength" xpathExpression="string-length(.) = 0">
                <Forward name="then" path="TypeNotFound" />
                <Forward name="else" path="XmlToJson" />
            </XmlIfPipe>

            <FixedResultPipe name="TypeNotFound" returnString="No matching taaktype found.">
                <Forward name="success" path="NotFound" />
            </FixedResultPipe>

            <JsonPipe name="XmlToJson" direction="XML2JSON" prettyPrint="true">
                <Forward name="success" path="Exit" />
                <Forward name="failure" path="Exception" />
            </JsonPipe>

            <PutInSessionPipe name="StoreStackTrace" sessionKey="errorStackTrace"/>
            
            <XsltPipe name="ReturnErrorMessage" xpathExpression="concat('Something went wrong. Stack trace: ', $errorStackTrace)">
                <Param name="errorStackTrace" sessionKey="errorStackTrace"/>
                <Forward name="success" path="Exception" />
            </XsltPipe>
        </Pipeline>
    </Adapter>

    <Adapter name="Frank_PostTaak">
        <Receiver name="Frank_PostTaak">
            <ApiListener
                name="Frank_PostTaak"
                method="POST"
                uriPattern="/api/v1/taak"
                headerParams="Authorization" />
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="Exit" state="SUCCESS" code="201"/>
                <Exit name="Reject" state="REJECTED" />
                <Exit name="Exception" state="ERROR" />
            </Exits>

            <SenderPipe name="GetToken" storeResultInSessionKey="FrankToken" active="${Token_Authentication.Active}">
                <IbisLocalSender javaListener="Internal_GetToken"/>
            </SenderPipe>

            <XmlIfPipe name="CompareTokens" xpathExpression="substring-after($ClientToken, 'Token ') = $FrankToken" active="${Token_Authentication.Active}">
                <Param name="ClientToken" sessionKey="headers" xpathExpression="headers/header[@name='Authorization']"/>
                <Param name="FrankToken" sessionKey="FrankToken" xpathExpression="//token"/>
                <Forward name="then" path="JsonToXml" />
                <Forward name="else" path="RejectMessage" />
            </XmlIfPipe>

            <FixedResultPipe name="RejectMessage" returnString="Token invalid" active="${Token_Authentication.Active}">
                <Forward name="success" path="Reject" />
            </FixedResultPipe>

            <JsonPipe name="JsonToXml" getInputFromSessionKey="originalMessage"/>

            <XmlValidatorPipe name="ValidateInputMessage" root="root"
                schema="xsd/ValidatePostTaakInput.xsd">
                <Forward name="failure" path="Reject" />
                <Forward name="exception" path="StoreStackTrace" />
            </XmlValidatorPipe>

            <SenderPipe name="SwitchConfiguration">
                <IbisLocalSender javaListener="Ultimo_PostZaak" />
                <Forward name="success" path="Exit" />
                <Forward name="exception" path="StoreStackTrace" />
            </SenderPipe>

            <PutInSessionPipe name="StoreStackTrace" sessionKey="errorStackTrace"/>
            
            <XsltPipe name="ReturnErrorMessage" xpathExpression="concat('Something went wrong. Stack trace: ', $errorStackTrace)">
                <Param name="errorStackTrace" sessionKey="errorStackTrace"/>
                <Forward name="success" path="Exception" />
            </XsltPipe>
        </Pipeline>
    </Adapter>

    <Adapter name="Frank_DeleteTaak">
        <Receiver name="Frank_DeleteTaak">
            <ApiListener
                name="Frank_DeleteTaak"
                method="DELETE"
                uriPattern="/api/v1/taak/{uuid}"
                headerParams="Authorization"/>

        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="Exit" state="SUCCESS" />
                <Exit name="Reject" state="REJECTED" />
                <Exit name="Exception" state="ERROR" />
            </Exits>

            <SenderPipe name="GetToken" storeResultInSessionKey="FrankToken" active="${Token_Authentication.Active}">
                <IbisLocalSender javaListener="Internal_GetToken"/>
            </SenderPipe>

            <XmlIfPipe name="CompareTokens" xpathExpression="substring-after($ClientToken, 'Token ') = $FrankToken" active="${Token_Authentication.Active}">
                <Param name="ClientToken" sessionKey="headers" xpathExpression="headers/header[@name='Authorization']"/>
                <Param name="FrankToken" sessionKey="FrankToken" xpathExpression="//token"/>
                <Forward name="then" path="JsonToXml" />
                <Forward name="else" path="RejectMessage" />
            </XmlIfPipe>

            <FixedResultPipe name="RejectMessage" returnString="Token invalid" active="${Token_Authentication.Active}">
                <Forward name="success" path="Reject" />
            </FixedResultPipe>

            <JsonPipe name="JsonToXml" getInputFromSessionKey="originalMessage"/>

            <XmlValidatorPipe name="ValidateInputMessage" root="root"
                schema="xsd/ValidateDeleteTaakInput.xsd">
                <Forward name="failure" path="Reject" />
                <Forward name="exception" path="StoreStackTrace" />
            </XmlValidatorPipe>

            <SenderPipe name="SwitchConfiguration">
                <IbisLocalSender javaListener="Ultimo_DeleteZaak">
                    <Param name="uuid" sessionKey="uuid" />
                </IbisLocalSender>
                <Forward name="success" path="Exit" />
                <Forward name="exception" path="StoreStackTrace" />
            </SenderPipe>

            <PutInSessionPipe name="StoreStackTrace" sessionKey="errorStackTrace"/>
            
            <XsltPipe name="ReturnErrorMessage" xpathExpression="concat('Something went wrong. Stack trace: ', $errorStackTrace)">
                <Param name="errorStackTrace" sessionKey="errorStackTrace"/>
                <Forward name="success" path="Exception" />
            </XsltPipe>
        </Pipeline>
    </Adapter>

    <Adapter name="Frank_GetTaak">
        <Receiver name="Frank_GetTaak">
            <ApiListener
                name="Frank_GetTaak"
                uriPattern="/api/v1/taak/{uuid}"
                headerParams="Authorization"/>

        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="Exit" state="SUCCESS" />
                <Exit name="Reject" state="REJECTED" />
                <Exit name="Exception" state="ERROR" />
            </Exits>

            <SenderPipe name="GetToken" storeResultInSessionKey="FrankToken" active="${Token_Authentication.Active}">
                <IbisLocalSender javaListener="Internal_GetToken"/>
            </SenderPipe>

            <XmlIfPipe name="CompareTokens" xpathExpression="substring-after($ClientToken, 'Token ') = $FrankToken" active="${Token_Authentication.Active}">
                <Param name="ClientToken" sessionKey="headers" xpathExpression="headers/header[@name='Authorization']"/>
                <Param name="FrankToken" sessionKey="FrankToken" xpathExpression="//token"/>
                <Forward name="then" path="SwitchConfiguration" />
                <Forward name="else" path="RejectMessage" />
            </XmlIfPipe>

            <FixedResultPipe name="RejectMessage" returnString="Token invalid" active="${Token_Authentication.Active}">
                <Forward name="success" path="Reject" />
            </FixedResultPipe>

            <SenderPipe name="SwitchConfiguration" getInputFromSessionKey="originalMessage">
                <IbisLocalSender javaListener="Ultimo_GetZaak">
                    <Param name="uuid" sessionKey="uuid" />
                </IbisLocalSender>
                <Forward name="success" path="Exit" />
                <Forward name="exception" path="StoreStackTrace" />
            </SenderPipe>

            <PutInSessionPipe name="StoreStackTrace" sessionKey="errorStackTrace"/>
            
            <XsltPipe name="ReturnErrorMessage" xpathExpression="concat('Something went wrong. Stack trace: ', $errorStackTrace)">
                <Param name="errorStackTrace" sessionKey="errorStackTrace"/>
                <Forward name="success" path="Exception" />
            </XsltPipe>
        </Pipeline>
    </Adapter>

    <Adapter name="Frank_GetToken">
        <Receiver name="Frank_GetToken">
            <ApiListener
                name="Frank_GetToken"
                uriPattern="/api-token-auth"
                method="POST" />
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="Exit" state="SUCCESS" />
                <Exit name="Reject" state="REJECTED" />
                <Exit name="Exception" state="ERROR" />
            </Exits>

            <JsonPipe name="Json2Xml" emptyInputReplacement="&lt;Empty>EmptyMessage&lt;/Empty>" direction="JSON2XML"/>

            <XmlIfPipe name="CheckEmpty" xpathExpression="string-length(//Empty) = 0">
                <Forward name="then" path="CheckUser" />
                <Forward name="else" path="RejectMessage" />
            </XmlIfPipe>

            <FixedResultPipe name="RejectMessage" returnString="Username or password missing">
                <Forward name="success" path="Reject" />
            </FixedResultPipe>

            <XmlIfPipe name="CheckUser" xpathExpression="$UserSet = $UserReceived">
                <Param name="UserSet" pattern="{username}" authAlias="TokenGen" hidden="true"/>
                <Param name="UserReceived" xpathExpression="//username" hidden="true"/>
                <Forward name="then" path="CheckPass" />
                <Forward name="else" path="RejectUser" />
            </XmlIfPipe>

            <XmlIfPipe name="CheckPass" xpathExpression="$PassSet = $PassReceived">
                <Param name="PassSet" pattern="{password}" authAlias="TokenGen" hidden="true"/>
                <Param name="PassReceived" xpathExpression="//password" hidden="true"/>
                <Forward name="then" path="RequestGetToken" />
                <Forward name="else" path="RejectUser" />
            </XmlIfPipe>

            <FixedResultPipe name="RejectUser" returnString="Username or Password incorrect">
                <Forward name="success" path="Reject" />
            </FixedResultPipe>

            <SenderPipe name="RequestGetToken">
                <IbisLocalSender name="RequestGetToken" javaListener="Internal_GetToken"/>
            </SenderPipe>

            <JsonPipe name="XmlToJson" direction="XML2JSON" addXmlRootElement="true">
                <Forward name="success" path="Exit" />
                <Forward name="failure" path="Exception" />
            </JsonPipe>

            <PutInSessionPipe name="StoreStackTrace" sessionKey="errorStackTrace"/>
            
            <XsltPipe name="ReturnErrorMessage" xpathExpression="concat('Something went wrong. Stack trace: ', $errorStackTrace)">
                <Param name="errorStackTrace" sessionKey="errorStackTrace"/>
                <Forward name="success" path="Exception" />
            </XsltPipe>
        </Pipeline>
    </Adapter>


    <!-- We do not process this, so we just return 501 -->
    <Adapter name="Frank_PostTaakCommunicatie">
        <Receiver name="Frank_PostTaakCommunicatie">
            <ApiListener
                name="Frank_PostTaakCommunicatie"
                method="POST"
                uriPattern="/api/v1/taak/{uuid}/communicatie" />

        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="Exit" state="SUCCESS" code="501" />
            </Exits>

            <FixedResultPipe name="NotImplemented" returnString="HTTP 501 Not implemented">
                <Forward name="success" path="Exit" />
            </FixedResultPipe>
        </Pipeline>
    </Adapter>

</Module>